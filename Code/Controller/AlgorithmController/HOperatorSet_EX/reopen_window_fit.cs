//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//


using System;
using HalconDotNet;
namespace HOperatorSet_EX
{

    public partial class HOperatorSet_Ex
    {
        // Chapter: Graphics / Window
        // Short Description: Reopens the  currently active graphics window with a given maximum extent such that it preserves the aspect ratio of the given image 
        public static void reopen_window_fit(HObject ho_Image, HTuple hv_MaxExtent, HTuple hv_Row,
            HTuple hv_Col, out HTuple hv_WindowHandle)
        {




            // Local iconic variables 

            // Local control variables 

            HTuple hv_ExpDefaultCtrlDummyVar = null, hv_Width = null;
            HTuple hv_Height = null, hv_WFac = null, hv_HFac = null;
            HTuple hv_WindowWidth = new HTuple(), hv_WindowHeight = new HTuple();
            HTuple hv_Fac = new HTuple();
            // Initialize local and output iconic variables 
            hv_WindowHandle = new HTuple();
            if ((int)(new HTuple(hv_MaxExtent.TupleLessEqual(0))) != 0)
            {

                return;
            }
            HOperatorSet.GetImagePointer1(ho_Image, out hv_ExpDefaultCtrlDummyVar, out hv_ExpDefaultCtrlDummyVar,
                out hv_Width, out hv_Height);
            hv_WFac = (1.0 * hv_Width) / hv_MaxExtent;
            hv_HFac = (1.0 * hv_Height) / hv_MaxExtent;
            if ((int)((new HTuple(hv_WFac.TupleLessEqual(1.0))).TupleAnd(new HTuple(hv_HFac.TupleLessEqual(
                1.0)))) != 0)
            {
                hv_WindowWidth = hv_Width.Clone();
                hv_WindowHeight = hv_Height.Clone();
            }
            else
            {
                hv_Fac = ((hv_WFac.TupleConcat(hv_HFac))).TupleMax();
                hv_WindowWidth = hv_Width / hv_Fac;
                hv_WindowHeight = hv_Height / hv_Fac;
            }
            //dev_close_window(...);
            //dev_open_window(...);
            HOperatorSet.SetPart(hv_WindowHandle, 0, 0, hv_Height - 1, hv_Width - 1);

            return;
        }

    }
}