//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//


using System;
using HalconDotNet;
namespace HOperatorSet_EX
{

    public partial class HOperatorSet_Ex
    {
        public static void region_to_spoke(HObject ho_Region, out HTuple hv_SpokeRows, out HTuple hv_SpokeCols)
        {



            // Local iconic variables 

            HObject ho_SelectedRegions = null, ho_RegionFillUp = null;
            HObject ho_RegionOpening = null, ho_RegionClosing = null, ho_RegionFillUp1 = null;
            HObject ho_RegionTrans = null, ho_Contours = null;

            // Local control variables 

            HTuple hv_Row = new HTuple(), hv_Column = new HTuple();
            HTuple hv_Radius = new HTuple(), hv_Rows = new HTuple();
            HTuple hv_Cols = new HTuple(), hv_Length = new HTuple();
            HTuple hv_Exception = null;
            // Initialize local and output iconic variables 
            HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
            HOperatorSet.GenEmptyObj(out ho_RegionFillUp);
            HOperatorSet.GenEmptyObj(out ho_RegionOpening);
            HOperatorSet.GenEmptyObj(out ho_RegionClosing);
            HOperatorSet.GenEmptyObj(out ho_RegionFillUp1);
            HOperatorSet.GenEmptyObj(out ho_RegionTrans);
            HOperatorSet.GenEmptyObj(out ho_Contours);
            hv_SpokeRows = new HTuple();
            hv_SpokeCols = new HTuple();
            try
            {

                hv_SpokeRows = new HTuple();
                hv_SpokeCols = new HTuple();
                ho_SelectedRegions.Dispose();
                HOperatorSet.SelectShapeStd(ho_Region, out ho_SelectedRegions, "max_area",
                    70);
                ho_RegionFillUp.Dispose();
                HOperatorSet.FillUp(ho_SelectedRegions, out ho_RegionFillUp);
                HOperatorSet.SmallestCircle(ho_RegionFillUp, out hv_Row, out hv_Column, out hv_Radius);
                ho_RegionOpening.Dispose();
                HOperatorSet.OpeningCircle(ho_RegionFillUp, out ho_RegionOpening, hv_Radius / 16);
                ho_RegionClosing.Dispose();
                HOperatorSet.ClosingCircle(ho_RegionOpening, out ho_RegionClosing, hv_Radius / 8);
                ho_RegionFillUp1.Dispose();
                HOperatorSet.FillUp(ho_RegionClosing, out ho_RegionFillUp1);
                ho_RegionTrans.Dispose();
                HOperatorSet.ShapeTrans(ho_RegionFillUp1, out ho_RegionTrans, "outer_circle");
                ho_Contours.Dispose();
                HOperatorSet.GenContourRegionXld(ho_RegionTrans, out ho_Contours, "border");
                HOperatorSet.GetContourXld(ho_Contours, out hv_Rows, out hv_Cols);
                HOperatorSet.TupleLength(hv_Rows, out hv_Length);
                hv_SpokeRows = new HTuple();
                hv_SpokeRows = hv_SpokeRows.TupleConcat(hv_Rows.TupleSelect(
                    0));
                hv_SpokeRows = hv_SpokeRows.TupleConcat(hv_Rows.TupleSelect(
                    hv_Length / 4));
                hv_SpokeRows = hv_SpokeRows.TupleConcat(hv_Rows.TupleSelect(
                    (hv_Length * 2) / 4));
                hv_SpokeRows = hv_SpokeRows.TupleConcat(hv_Rows.TupleSelect(
                    (hv_Length * 3) / 4));
                hv_SpokeRows = hv_SpokeRows.TupleConcat(hv_Rows.TupleSelect(
                    0));
                hv_SpokeCols = new HTuple();
                hv_SpokeCols = hv_SpokeCols.TupleConcat(hv_Cols.TupleSelect(
                    0));
                hv_SpokeCols = hv_SpokeCols.TupleConcat(hv_Cols.TupleSelect(
                    hv_Length / 4));
                hv_SpokeCols = hv_SpokeCols.TupleConcat(hv_Cols.TupleSelect(
                    (hv_Length * 2) / 4));
                hv_SpokeCols = hv_SpokeCols.TupleConcat(hv_Cols.TupleSelect(
                    (hv_Length * 3) / 4));
                hv_SpokeCols = hv_SpokeCols.TupleConcat(hv_Cols.TupleSelect(
                    0));
            }
            // catch (Exception) 
            catch (HalconException HDevExpDefaultException1)
            {
                HDevExpDefaultException1.ToHTuple(out hv_Exception);
                hv_SpokeRows = new HTuple();
                hv_SpokeCols = new HTuple();
            }
            ho_SelectedRegions.Dispose();
            ho_RegionFillUp.Dispose();
            ho_RegionOpening.Dispose();
            ho_RegionClosing.Dispose();
            ho_RegionFillUp1.Dispose();
            ho_RegionTrans.Dispose();
            ho_Contours.Dispose();

            return;
        }

    }
}