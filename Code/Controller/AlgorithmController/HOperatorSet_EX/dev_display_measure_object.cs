//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//


using System;
using HalconDotNet;
namespace HOperatorSet_EX
{
    public partial class HOperatorSet_Ex
    {
        public static void dev_display_measure_object(HTuple hv_WindowHandle, HTuple hv_Row, HTuple hv_Col, HTuple hv_Phi,
            HTuple hv_Length1, HTuple hv_Length2)
        {
             // Local iconic variables 

            HObject ho_Contour;

            // Local control variables 

            HTuple hv_RowStart = null, hv_RowEnd = null;
            HTuple hv_ColStart = null, hv_ColEnd = null, hv_drow = null;
            HTuple hv_dcol = null;
            // Initialize local and output iconic variables 
            HOperatorSet.GenEmptyObj(out ho_Contour);
            hv_RowStart = hv_Row + ((hv_Phi.TupleSin()) * hv_Length1);
            hv_RowEnd = hv_Row - ((hv_Phi.TupleSin()) * hv_Length1);
            hv_ColStart = hv_Col - ((hv_Phi.TupleCos()) * hv_Length1);
            hv_ColEnd = hv_Col + ((hv_Phi.TupleCos()) * hv_Length1);
            hv_drow = (((((new HTuple(90)).TupleRad()) - hv_Phi)).TupleSin()) * hv_Length2;
            hv_dcol = (((((new HTuple(90)).TupleRad()) - hv_Phi)).TupleCos()) * hv_Length2;
            ho_Contour.Dispose();
            HOperatorSet.GenContourPolygonXld(out ho_Contour, ((((((((hv_RowStart - hv_drow)).TupleConcat(
                hv_RowEnd - hv_drow))).TupleConcat(hv_RowEnd + hv_drow))).TupleConcat(hv_RowStart + hv_drow))).TupleConcat(
                hv_RowStart - hv_drow), ((((((((hv_ColStart - hv_dcol)).TupleConcat(hv_ColEnd - hv_dcol))).TupleConcat(
                hv_ColEnd + hv_dcol))).TupleConcat(hv_ColStart + hv_dcol))).TupleConcat(hv_ColStart - hv_dcol));
            HOperatorSet.SetLineWidth(hv_WindowHandle, 2);
            HOperatorSet.SetColor(hv_WindowHandle, "blue");
            HOperatorSet.DispObj(ho_Contour, hv_WindowHandle);
            dev_display_profile_line(hv_WindowHandle,hv_Row, hv_Col, hv_Phi, hv_Length1, hv_Length2);
            ho_Contour.Dispose();

            return;
        }

    }
}