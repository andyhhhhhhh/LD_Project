//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//


using System;
using HalconDotNet;
namespace HOperatorSet_EX
{

    public  partial class HOperatorSet_Ex
    {
        // Chapter: Graphics / Output
        // Short Description:  This procedure plots tuples representing functions or curves in a coordinate system. 
        public static void plot_funct_1d(HTuple hv_WindowHandle, HTuple hv_Function, HTuple hv_XLabel,
            HTuple hv_YLabel, HTuple hv_Color, HTuple hv_GenParamNames, HTuple hv_GenParamValues)
        {



            // Local control variables 

            HTuple hv_XValues = null, hv_YValues = null;
            // Initialize local and output iconic variables 
            //This procedure plots a function in a coordinate system.
            //
            //Input parameters:
            //
            //Function: 1d function
            //
            //XLabel: X axis label
            //
            //XLabel: Y axis label
            //
            //Color: Color of the plotted function
            //       If [] is given, the currently set display color is used.
            //       If 'none is given, the function is not plotted, but only
            //       the coordinate axes as specified.
            //
            //GenParamNames: Generic parameters to control the presentation
            //               The parameters are evaluated from left to right.
            //
            //               Possible Values:
            //   'axes_color': coordinate system color
            //                 Default: 'white'
            //                 If 'none' is given, no coordinate system is shown.
            //   'style': Graph style
            //            Possible values: 'line' (default), 'cross', 'filled'
            //   'clip': Clip graph to coordinate system area
            //           Possibile values: 'yes' (default), 'no'
            //   'ticks': Control display of ticks on the axes
            //            If 'min_max_origin' is given (default), ticks are shown
            //            at the minimum and maximum values of the axes and at the
            //            intercept point of x- and y-axis.
            //            If 'none' is given, no ticks are shown.
            //            If any number != 0 is given, it is interpreted as distance
            //            between the ticks.
            //   'ticks_x': Control display of ticks on x-axis only
            //   'ticks_y': Control display of ticks on y-axis only
            //   'grid': Control display of grid lines within the coordinate system
            //           If 'min_max_origin' is given (default), grid lines are shown
            //           at the minimum and maximum values of the axes.
            //           If 'none' is given, no grid lines are shown.
            //           If any number != 0 is given, it is interpreted as distance
            //           between the grid lines.
            //   'grid_x': Control display of grid lines for the x-axis only
            //   'grid_y': Control display of grid lines for the y-axis only
            //   'grid_color': Color of the grid (default: 'dim gray')
            //   'margin': The distance in pixels of the coordinate system area
            //             to all four window borders.
            //   'margin_left': The distance in pixels of the coordinate system area
            //                  to the left window border.
            //   'margin_right': The distance in pixels of the coordinate system area
            //                   to the right window border.
            //   'margin_top': The distance in pixels of the coordinate system area
            //                 to the upper window border.
            //   'margin_bottom': The distance in pixels of the coordinate system area
            //                    to the lower window border.
            //   'start_x': Lowest x value of the x axis
            //              Default: min(XValues)
            //   'end_x': Highest x value of the x axis
            //            Default: max(XValues)
            //   'start_y': Lowest y value of the x axis
            //              Default: min(YValues)
            //   'end_y': Highest y value of the x axis
            //            Default: max(YValues)
            //   'origin_x': X coordinate of the intercept point of x- and y-axis.
            //               Default: same as start_x
            //   'origin_y': Y coordinate of the intercept point of x- and y-axis.
            //               Default: same as start_y
            //
            //GenParamValues: Values of the generic parameters of GenericParamNames
            //
            //
            HOperatorSet.Funct1dToPairs(hv_Function, out hv_XValues, out hv_YValues);
            plot_tuple(hv_WindowHandle, hv_XValues, hv_YValues, hv_XLabel, hv_YLabel,
                hv_Color, hv_GenParamNames, hv_GenParamValues);

            return;
        }
    }
}
