//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//


using System;
using HalconDotNet;
namespace HOperatorSet_EX
{
    public partial class HOperatorSet_Ex
    {
        public static void dev_display_profile_line(HTuple hv_WindowHandle, HTuple hv_Row, HTuple hv_Col, HTuple hv_Phi,
            HTuple hv_Length1, HTuple hv_Length2)          
        {



            // Local iconic variables 

            HObject ho_CProfile, ho_CArrow, ho_CMidPoint;

            // Local control variables 

            HTuple hv_ArrowAngle = null, hv_ArrowLength = null;
            HTuple hv_PSize = null, hv_RowStart = null, hv_RowEnd = null;
            HTuple hv_ColStart = null, hv_ColEnd = null;
            // Initialize local and output iconic variables 
            HOperatorSet.GenEmptyObj(out ho_CProfile);
            HOperatorSet.GenEmptyObj(out ho_CArrow);
            HOperatorSet.GenEmptyObj(out ho_CMidPoint);
            hv_ArrowAngle = ((new HTuple(45)).TupleRad()) / 2;
            hv_ArrowLength = hv_Length1 * 0.2;
            hv_PSize = hv_Length2 * 0.2;
            hv_RowStart = hv_Row + ((hv_Phi.TupleSin()) * hv_Length1);
            hv_RowEnd = hv_Row - ((hv_Phi.TupleSin()) * hv_Length1);
            hv_ColStart = hv_Col - ((hv_Phi.TupleCos()) * hv_Length1);
            hv_ColEnd = hv_Col + ((hv_Phi.TupleCos()) * hv_Length1);
            ho_CProfile.Dispose();
            HOperatorSet.GenContourPolygonXld(out ho_CProfile, hv_RowStart.TupleConcat(hv_RowEnd),
                hv_ColStart.TupleConcat(hv_ColEnd));
            ho_CArrow.Dispose();
            HOperatorSet.GenContourPolygonXld(out ho_CArrow, ((((hv_RowEnd - ((((hv_ArrowAngle - hv_Phi)).TupleSin()
                ) * hv_ArrowLength))).TupleConcat(hv_RowEnd))).TupleConcat(hv_RowEnd + ((((hv_ArrowAngle + hv_Phi)).TupleSin()
                ) * hv_ArrowLength)), ((((hv_ColEnd - ((((hv_ArrowAngle - hv_Phi)).TupleCos()) * hv_ArrowLength))).TupleConcat(
                hv_ColEnd))).TupleConcat(hv_ColEnd - ((((hv_ArrowAngle + hv_Phi)).TupleCos()) * hv_ArrowLength)));
            ho_CMidPoint.Dispose();
            HOperatorSet.GenContourPolygonXld(out ho_CMidPoint, ((hv_Row - ((((((new HTuple(90)).TupleRad()
                ) + hv_Phi)).TupleSin()) * hv_PSize))).TupleConcat(hv_Row - ((((hv_Phi - ((new HTuple(90)).TupleRad()
                ))).TupleSin()) * hv_PSize)), ((hv_Col + ((((((new HTuple(90)).TupleRad()) + hv_Phi)).TupleCos()
                ) * hv_PSize))).TupleConcat(hv_Col + ((((hv_Phi - ((new HTuple(90)).TupleRad()))).TupleCos()
                ) * hv_PSize)));
            HOperatorSet.SetLineWidth(hv_WindowHandle, 3);
            HOperatorSet.SetColor(hv_WindowHandle, "white");
            HOperatorSet.DispObj(ho_CProfile, hv_WindowHandle);
            HOperatorSet.DispObj(ho_CArrow, hv_WindowHandle);
            HOperatorSet.SetLineWidth(hv_WindowHandle, 1);
            HOperatorSet.SetColor(hv_WindowHandle, "blue");
            HOperatorSet.DispObj(ho_CProfile, hv_WindowHandle);
            HOperatorSet.DispObj(ho_CArrow, hv_WindowHandle);
            ho_CProfile.Dispose();
            ho_CArrow.Dispose();
            ho_CMidPoint.Dispose();

            return;
        }

    }
}
