//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 12.0
//


using System;
using HalconDotNet;
  namespace HOperatorSet_EX
  {
      public partial class HOperatorSet_Ex
      {
          public static void dev_display_profile_points(HTuple hv_WindowHandle, HTuple hv_PRows, HTuple hv_PCols, HTuple hv_Row,
              HTuple hv_Col, HTuple hv_Phi, HTuple hv_Length1, HTuple hv_Length2)
          {



              // Local iconic variables 

              HObject ho_CPoint = null;

              // Local control variables 

              HTuple hv_PSize = null, hv_RowStart = null;
              HTuple hv_RowEnd = null, hv_ColStart = null, hv_ColEnd = null;
              HTuple hv_idx = null;
              // Initialize local and output iconic variables 
              HOperatorSet.GenEmptyObj(out ho_CPoint);
              hv_PSize = hv_Length2 * 0.5;
              hv_RowStart = hv_Row + ((hv_Phi.TupleSin()) * hv_Length1);
              hv_RowEnd = hv_Row - ((hv_Phi.TupleSin()) * hv_Length1);
              hv_ColStart = hv_Col - ((hv_Phi.TupleCos()) * hv_Length1);
              hv_ColEnd = hv_Col + ((hv_Phi.TupleCos()) * hv_Length1);
              for (hv_idx = 0; (int)hv_idx <= (int)((new HTuple(hv_PRows.TupleLength())) - 1); hv_idx = (int)hv_idx + 1)
              {
                  ho_CPoint.Dispose();
                  HOperatorSet.GenContourPolygonXld(out ho_CPoint, (((hv_PRows.TupleSelect(hv_idx)) - ((((((new HTuple(90)).TupleRad()
                      ) + hv_Phi)).TupleSin()) * hv_PSize))).TupleConcat((hv_PRows.TupleSelect(hv_idx)) - ((((hv_Phi - ((new HTuple(90)).TupleRad()
                      ))).TupleSin()) * hv_PSize)), (((hv_PCols.TupleSelect(hv_idx)) + ((((((new HTuple(90)).TupleRad()
                      ) + hv_Phi)).TupleCos()) * hv_PSize))).TupleConcat((hv_PCols.TupleSelect(hv_idx)) + ((((hv_Phi - ((new HTuple(90)).TupleRad()
                      ))).TupleCos()) * hv_PSize)));
                  HOperatorSet.SetColor(hv_WindowHandle, "red");
                  HOperatorSet.SetLineWidth(hv_WindowHandle, 3);
                  HOperatorSet.DispObj(ho_CPoint, hv_WindowHandle);
              }
              ho_CPoint.Dispose();

              return;
          }
      }
}
