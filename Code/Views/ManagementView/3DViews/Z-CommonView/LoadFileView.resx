<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLoadFile.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr8AAA6/ATgFUyQAAASQSURBVGhD7ZpZqE1RGMeveShTMks3IRElQ6YXQ4ZQFPIi
        t1CmzEORV8nwQBGJ8kBIEoVrzFAkw/VkKqSIlDIkmf+/2176zrp7n7vPOfsMclf922vdtfb6/v/1renb
        55aV/QepiTQ2KxKwnVVqpbemC3uEc8LlIgHbcJghwClWGqRWlcI34XeJAC5wglvaRIOHJUI6bPDgFikC
        F6HSvvhU5cOBG3FloYFtOFhOcAydTswzO22Oq9xDqFeb2/JYj204wMWJgCPrs0ZidF0jVPNiqSS4WE/A
        NSWxXbHinQBcV8yR9/nBBU6OH1xTtlj2ebZK16CGwhJwhZ0hcIXz3+QL2FsChH0KcHIDnLWAdupkqDBC
        6Cc08qw0VLlPUD9cz0xAn/SNjbCUs4Au6vW88DnAOz2XepbmqvwmqP+kZyZw/WIDW4l7YLx6/GHciDuv
        CE0DS4z+Ka8+m5McG9hKXEA39Xhd+Brgg55rPSuLVX5v2ri2mTyxga3EBdAhrh0jjBOGCP5tsbH+xlFP
        fTag77Dpg+2c10DIoBT0T3UCCjrc+VoDxRRRN4UYfU7ejkJnoU2EO1oH9bTJFPTtn+7OTM4eIIjYJTwW
        uNreEaZ6IjiAbgX1T/TMBPRJ39gIC1hyFjBWHftxMse+OwsaKH9CyOb0te9gg/PATzkL6Ksen3kEd6pc
        31jalIAAbGArcQEEFdwWVwhrhArBvzmyLmYH9av1zBT0jY2wYMp6gDvYPxcPrDTeJbixnq9WYyOyYgQ0
        jDo8mgusJz/hXa7vG4Qal71iCmCrJY44KDA1rgpHheVCzxAhoX8qhgCmwEyhSvhlpofdkVjQjLqLOSL1
        FFoA02WJ8DGCuBXxXW221Cai0AImiBCBjyP6U/n7wn6BBXpDIAiyH7MWpptOcQW0VScDBYKZ3gJhpE0s
        vl5BPW36CynbncothAuGHLHwRqG96ail8vME4msn4pHy5VEi4gjopJfPCISSuJ7OF3kdVqj8KqinHaO8
        XSBSc2mUMpB2xLYqn7IlmrYLlLenP6JCUxwBYUE9W29tQf0LtelqrHK4OfKvleczTFTC43dN+325CCjX
        yzeDEWFUGMX1XofLVGbkqQfM4wOCnUbbDKHbyjNdohKeOWLan1Y+9LYaxwMY4QBhAU4W+BDlz28udlwF
        JgUYrad/7d5sCD1QnlGOSqyxk6Y9l0V/3VW/G1dAGluxq+YbQqwl1kRU4qv0c9Me74UmX0A+P+7ySdLu
        LmdV7hDCiiuF/aDLdJwSJaCQn9fZau3NkgVNXDFR4FpBVDZSOCRwiLkFf0l5tuDIZNXm+wcO7jhVhhwk
        vwjYZb9nI/ADIxY8Z0xkKvRPTCz2eyFE00V019KJIA6t9DpM6kc+psxuYZpgr8rdVd4hvBS4TjjyXO7e
        CtxK2bqtKERE3lLz/TMrpAZ4c4C9nqkxS1gncLbMEbiGsGVCFtJWBHemqNO7+uMsnvAD+FyDdd7n94Jh
        noA4RQRaEccCcZHvMp2S/leDi+pzlZDt/z/gCUYe8oPjqHZtkvpnj2yJW65Mm9CTOBNBJdX2D9L33Jog
        nfvlAAAAAElFTkSuQmCC
</value>
  </data>
</root>